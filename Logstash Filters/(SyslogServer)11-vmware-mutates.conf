#This scenario: Admin had VMWARE logs nfs mounted to a single server because OS hard drive was a small SSD.
#The server all the logs were going to had a filebeat configured to pull them, but all the information relayed back
#was for the NFS server since that is where the beat was. So I had to mutate the logs based on filepath which had esx in the name, in
#order to show the correct information.
#VMWARE also didnt match with the standard logs (its missing the hostname in its logs). So groks werent matching. Had to fix that as well; this one
#fixes the ssh logs only.
#I'm also using a well known public IP for colorado springs if traffic originated from a local IP that normally wouldnt map.

#------------------------------------------------------------------------------
#VMWARE Auditing From LogStore1.spde.local -- Manually Created by Steve Craig
#------------------------------------------------------------------------------
filter {
  if [log][file][path] =~ "esx" {
    mutate {
      copy => { "[log][file][path]" => "path_tmp" }
    }
    mutate {
      split => { "[path_tmp]" => "/" }
      add_field => { "tag_hostname" => "%{[path_tmp][2]}" }
    }
    mutate {
      update => { "[host][name]" => "%{[tag_hostname]}" }
      update => { "[beat][hostname]" => "%{[tag_hostname]}" }
      update => { "[beat][name]" => "%{[tag_hostname]}" }
      update => { "[host][os][name]" => "ESXi" }
      update => { "[host][os][platform]" => "VMWare" }
      update => { "[host][os][version]" => "Not Applicable" }
      update => { "[host][os][codename]" => "ESXi" }
    }
    if [message] =~ "sshd" {
      mutate {
        add_field => { "system.auth.hostname" => "%{[tag_hostname]}" }
      }
      grok {
        match => { "message" => ["%{TIMESTAMP_ISO8601:[system][auth][timestamp]} sshd(?:\[%{POSINT:[system][auth][pid]}\])?: %{DATA:[system][auth][ssh][event]} %{DATA:[system][auth][ssh][method$
                                 "%{TIMESTAMP_ISO8601:[system][auth][timestamp]} sshd(?:\[%{POSINT:[system][auth][pid]}\])?: %{DATA:[system][auth][ssh][event]} %{DATA:[system][auth][ssh][method$
      }
      date {
        match => [ "[system][auth][timestamp]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
      }
      if [system][auth][ssh][ip] =~ /^192\.168\./ or [system][auth][ssh][ip] =~ /^10\./ {
        mutate {
          add_field => { "real_source" => "%{[system][auth][ssh][ip]}" }
        }
        mutate {
          update => { "[system][auth][ssh][ip]" => "158.120.169.71" }
          update => { "[system][auth][ssh][geoip]" => "158.120.169.71" }
        }
      }
      geoip {
        source => "[system][auth][ssh][ip]"
        target => "[system][auth][ssh][geoip]"
      }
      mutate {
        remove_field => [ "message", "tag_hostname", "path_tmp" ]
      }
    }
  }
}
